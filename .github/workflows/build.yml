name: Build FlameOS ISO

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pacman -Syu --noconfirm archiso git openssh mktorrent

      - name: Build ISO
        run: |
          mkdir -p out work
          mkarchiso -v -w work -o out .

      - name: Generate Torrent file
        run: |
          ISO_FILE=$(ls out/*.iso | head -n 1)
          # Example tracker (you can add more with multiple -a flags)
          TRACKER="udp://tracker.opentrackr.org:1337/announce"
          mktorrent -a $TRACKER -o "$ISO_FILE.torrent" "$ISO_FILE"
          ls -lh out

      - name: Add SSH key and trust SourceForge host
        env:
          SF_SSH_KEY: ${{ secrets.SF_SSH_KEY }}
        shell: bash
        run: |
          mkdir -p $HOME/.ssh
          echo "$SF_SSH_KEY" > $HOME/.ssh/id_ed25519
          chmod 600 $HOME/.ssh/id_ed25519
          ssh-keyscan frs.sourceforge.net >> $HOME/.ssh/known_hosts
          chmod 644 $HOME/.ssh/known_hosts

      - name: Upload to SourceForge with SSH
        env:
          SF_USER: ${{ secrets.SF_USER }}
          SF_PROJECT: ${{ secrets.SF_PROJECT }}
          SF_PATH: ${{ secrets.SF_PATH }}
        shell: bash
        run: |
          scp -i $HOME/.ssh/id_ed25519 -o UserKnownHostsFile=$HOME/.ssh/known_hosts out/* $SF_USER@frs.sourceforge.net:/home/frs/project/$SF_PROJECT/$SF_PATH/

      - name: Upload ISO & Torrent as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: flameos-release
          path: |
            out/*.iso
            out/*.torrent
